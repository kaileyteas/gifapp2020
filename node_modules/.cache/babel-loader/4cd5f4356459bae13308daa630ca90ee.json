{"ast":null,"code":"var _jsxFileName = \"/Users/kale/Desktop/school/Spring Quarter/HCDE 438/rando/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport './media.css';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [gifs, setGifs] = useState([]);\n\n  async function getGifs() {\n    console.log(\"Get information\");\n    const key = 'voimtxRjvTMO2LtI4kAD6xBDySCuplT1';\n    let url = \"https://api.giphy.com/v1/gifs/search?\";\n    url += 'api_key=' + key;\n    url += '&q=' + text;\n    /** Using await methods (or asynchronous methods) requires async methods */\n\n    const r = await fetch(url);\n    const body = await r.json();\n    setGifs(body.data);\n    setText('');\n  }\n\n  console.log(gifs);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Enter text\",\n    fullWidth: true,\n    variant: \"outlined\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    onKeyPress: e => {\n      if (e.key === 'Enter') getGifs();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: getGifs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"send\")), React.createElement(\"div\", {\n    className: \"gifs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, gifs.map((gif, i) => React.createElement(Gif, Object.assign({\n    key: i\n  }, gif, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))))));\n}\n/**Gif component\n */\n\n\nfunction Gif({\n  title,\n  images\n}) {\n  return React.createElement(\"div\", {\n    className: \"gif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: images.fixed_height.url,\n    alt: \"gif\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"gif-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, title));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kale/Desktop/school/Spring Quarter/HCDE 438/rando/src/App.js"],"names":["React","useState","TextField","Button","App","text","setText","gifs","setGifs","getGifs","console","log","key","url","r","fetch","body","json","data","e","target","value","map","gif","i","Gif","title","images","fixed_height"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,aAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,iBAAeQ,OAAf,GAAwB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAMC,GAAG,GAAG,kCAAZ;AACA,QAAIC,GAAG,GAAG,uCAAV;AACAA,IAAAA,GAAG,IAAI,aAAaD,GAApB;AACAC,IAAAA,GAAG,IAAI,QAAQR,IAAf;AACA;;AACA,UAAMS,CAAC,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAMG,IAAI,GAAG,MAAMF,CAAC,CAACG,IAAF,EAAnB;AACAT,IAAAA,OAAO,CAACQ,IAAI,CAACE,IAAN,CAAP;AACAZ,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,gBAAd;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,SAAS,MAFX;AAEY,IAAA,OAAO,EAAC,UAFpB;AAGE,IAAA,KAAK,EAAEF,IAHT;AAIE,IAAA,QAAQ,EAAEc,CAAC,IAAGb,OAAO,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAJvB;AAKE,IAAA,UAAU,EAAEF,CAAC,IAAE;AACb,UAAGA,CAAC,CAACP,GAAF,KAAQ,OAAX,EAAoBH,OAAO;AAC9B,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAWE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AACE,IAAA,OAAO,EAAEA,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,CADF,EAiBE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACe,GAAL,CAAS,CAACC,GAAD,EAAKC,CAAL,KAAU,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA;AAAV,KAAiBD,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAnB,CADH,CAjBF,CADF,CADF;AAyBD;AAED;;;;AAEA,SAASE,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAb,EAA6B;AAC3B,SAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAK,IAAA,GAAG,EAAEA,MAAM,CAACC,YAAP,CAAoBf,GAA9B;AAAmC,IAAA,GAAG,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAEL;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4Ba,KAA5B,CAFK,CAAP;AAID;;AAED,eAAetB,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport './media.css'\n\nfunction App() {\n  const [text, setText] = useState('')\n  const [gifs, setGifs] = useState([])\n\n  async function getGifs(){\n    console.log(\"Get information\")\n    const key = 'voimtxRjvTMO2LtI4kAD6xBDySCuplT1'\n    let url = \"https://api.giphy.com/v1/gifs/search?\"\n    url += 'api_key=' + key\n    url += '&q=' + text\n    /** Using await methods (or asynchronous methods) requires async methods */\n    const r = await fetch(url)\n    const body = await r.json()\n    setGifs(body.data)\n    setText('')\n  }\n\n  console.log(gifs)\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"input-wrap\">\n          {/** This is a text field component from material-ui */}\n          <TextField id=\"outlined-basic\" \n            label=\"Enter text\" \n            fullWidth variant=\"outlined\"\n            value={text}\n            onChange={e=> setText(e.target.value)}\n            onKeyPress={e=>{\n              if(e.key==='Enter') getGifs()\n          }}/>\n          {/** this is a button component from material-ui */}\n          <Button variant=\"contained\" color=\"primary\"\n            onClick={getGifs}>\n            send\n          </Button>\n        </div>\n        <div className=\"gifs\">\n          {gifs.map((gif,i)=> <Gif key={i} {...gif}/>)}\n        </div>\n      </header>\n    </div>\n  );\n}\n\n/**Gif component\n */\nfunction Gif({title, images}){\n  return <div className=\"gif\">\n    <img src={images.fixed_height.url} alt=\"gif\"/>\n    <div className=\"gif-title\">{title}</div>\n  </div>\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}