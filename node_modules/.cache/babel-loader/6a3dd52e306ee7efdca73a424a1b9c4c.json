{"ast":null,"code":"var _jsxFileName = \"/Users/kale/Desktop/school/Spring Quarter/HCDE 438/rando/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  const [text, setText] = useState('');\n  const [gifs, set] = useState([]);\n\n  async function getInfo() {\n    const key = 'voimtxRjvTMO2LtI4kAD6xBDySCuplT1';\n    const url = \"https://api.giphy.com/v1/gifs/search?\";\n    url += 'api_key=' + key;\n    url += '&=' + text;\n    /** Using await methods (or asynchronous methods) requires async methods */\n\n    const r = await fetch(url);\n    const body = await r.json();\n    setGifs(body.data);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    label: \"Enter text\",\n    fullWidth: true,\n    variant: \"outlined\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: getInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"send\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kale/Desktop/school/Spring Quarter/HCDE 438/rando/src/App.js"],"names":["React","useState","TextField","Button","App","text","setText","gifs","set","getInfo","key","url","r","fetch","body","json","setGifs","data","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,GAAP,IAAcP,QAAQ,CAAC,EAAD,CAA5B;;AAEA,iBAAeQ,OAAf,GAAwB;AACtB,UAAMC,GAAG,GAAG,kCAAZ;AACA,UAAMC,GAAG,GAAG,uCAAZ;AACAA,IAAAA,GAAG,IAAI,aAAaD,GAApB;AACAC,IAAAA,GAAG,IAAI,OAAON,IAAd;AACA;;AACA,UAAMO,CAAC,GAAG,MAAMC,KAAK,CAACF,GAAD,CAArB;AACA,UAAMG,IAAI,GAAG,MAAMF,CAAC,CAACG,IAAF,EAAnB;AACAC,IAAAA,OAAO,CAACF,IAAI,CAACG,IAAN,CAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,gBAAd;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,SAAS,MAFX;AAEY,IAAA,OAAO,EAAC,UAFpB;AAGG,IAAA,KAAK,EAAEZ,IAHV;AAIG,IAAA,QAAQ,EAAEa,CAAC,IAAGZ,OAAO,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AACE,IAAA,OAAO,EAAEX,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,CADF,CADF,CADF;AAoBD;;AAED,eAAeL,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  const [text, setText] = useState('')\n  const [gifs, set] = useState([])\n\n  async function getInfo(){\n    const key = 'voimtxRjvTMO2LtI4kAD6xBDySCuplT1'\n    const url = \"https://api.giphy.com/v1/gifs/search?\"\n    url += 'api_key=' + key\n    url += '&=' + text\n    /** Using await methods (or asynchronous methods) requires async methods */\n    const r = await fetch(url)\n    const body = await r.json()\n    setGifs(body.data)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"input-wrap\">\n          {/** This is a text field component from material-ui */}\n          <TextField id=\"outlined-basic\" \n            label=\"Enter text\" \n            fullWidth variant=\"outlined\"\n             value={text}\n             onChange={e=> setText(e.target.value)}/>\n\n          {/** this is a button component from material-ui */}\n          <Button variant=\"contained\" color=\"primary\"\n            onClick={getInfo}>\n            send\n          </Button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}